#BlueJ class context
comment0.target=Student
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Student\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Student()
comment1.text=\r\n\ Default\ constructor\ for\ Student.\r\n\ Creates\ a\ new\ Student\ object\ with\ name\ of\ "no\ name"\r\n\ and\ a\ empty\ ArrayList\ of\ courses.\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Returns\ a\ String\ representation\ of\ the\ Student\ object.\r\n\ This\ method\ is\ called\ when\ the\ user\ enters\ choice\ 5\r\n\ from\ the\ main\ menu\ in\ P5's\ main\ method.\r\n\ \r\n\ @return\ "*studentName*\:\ *courses*"\r\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\r\n\ Determines\ whether\ or\ not\ this\ equals\ another\ Object.\r\n\r\n\ @param\ o\ The\ other\ Object.\r\n\ @return\ true\ if\ equal,\ false\ otherwise.\r\n
comment2.params=name
comment2.target=Student(java.lang.String)
comment2.text=\r\n\ Constructor\ for\ Student.\r\n\ Creates\ a\ new\ Student\ object\ with\ the\ given\ name\r\n\ and\ an\ empty\ ArrayList\ of\ courses.\r\n\ \r\n\ @param\ name\ -\ The\ name\ to\ be\ assigned\ to\ the\ Student\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Gets\ the\ name\ of\ the\ Student.\r\n\ \r\n\ @return\ The\ name\ of\ the\ student.\r\n
comment4.params=in
comment4.target=void\ setName(java.lang.String)
comment4.text=\r\n\ Sets\ the\ name\ of\ the\ Student\ to\ the\ given\ name.\r\n\ \r\n\ @param\ in\ -\ The\ given\ name.\r\n
comment5.params=
comment5.target=java.util.ArrayList\ getCourses()
comment5.text=\r\n\ Gets\ a\ deep\ copy\ of\ the\ list\ of\ courses.\r\n\ \r\n\ @return\ -\ A\ deep\ copy\ of\ courses.\ This\ is\ an\ ArrayList\ of\ type\ StudentCourse.\r\n
comment6.params=name\ grades
comment6.target=void\ addCourse(java.lang.String,\ java.util.ArrayList)
comment6.text=\r\n\ Adds\ a\ new\ StudentCourse\ with\ the\ given\ name\r\n\ \ \ \ \ and\ list\ of\ grades\ to\ the\ list\ of\ courses.\r\n\ \ \ \ \ \r\n\ @param\ name\ \ \ -\ The\ name\ for\ the\ new\ course.\r\n\ @param\ grades\ -\ The\ list\ of\ grades\ for\ the\ new\ course.\r\n
comment7.params=name
comment7.target=double\ getCourseAverage(java.lang.String)
comment7.text=\r\n\ Gets\ the\ average\ for\ a\ given\ course.\r\n\ \r\n\ @param\ name\ -\ The\ name\ of\ the\ given\ course.\r\n\ \r\n\ @return\ -\ The\ average\ for\ the\ course\ with\ course\ name\ name,\r\n\ \ \ \ \ \ \ \ \ \ \ or\ a\ negative\ number\ if\ not\ found.\r\n
comment8.params=
comment8.target=double\ calcAverage()
comment8.text=\r\n\ Calculates\ the\ average\ of\ all\ courses\ in\ the\ list\ of\ courses.\r\n\ This\ method\ calls\ StudentCourse's\ calcAverage\ method.\r\n\ \r\n\ @return\ \ -\ The\ average\ of\ all\ courses\ in\ the\ list\ of\ courses,\ 0.0\ otherwise.\r\n
comment9.params=
comment9.target=java.lang.String\ getSummary()
comment9.text=\r\n\ Returns\ a\ summary\ of\ the\ Student\ as\ a\ String.\r\n\ This\ method\ is\ called\ when\ the\ user\ enters\ choice\ 5\r\n\ from\ the\ main\ menu\ in\ P5's\ main\ method.\r\n\ \r\n\ @return\ -\ *studentName*\ Average\:\ *averageOfAllCourses*\ Courses\:\ *courseNames*\r\n
numComments=12
